function [K]=StiffnessMatrixAssemble(nd, elem_cd, elem_mp)


%%-------------------------------------------------------------------------

% INPUT: global stiffness matrices
% OUTPUT: assembled structural stiffness matrix

%K=zeros(3*size(nd,1));
K=sparse(3*size(nd,1),3*size(nd,1));

for i_K=1:size(elem_cd,1)
    
    
[global_K]=GlobalStiffnessMatrix...
    (elem_cd(i_K,1),elem_cd(i_K,2),elem_cd(i_K,3),...
    elem_cd(i_K,4),...
    elem_mp(i_K,3),elem_mp(i_K,4),elem_mp(i_K,5));

K(elem_mp(i_K,1)*3-2:elem_mp(i_K,1)*3,elem_mp(i_K,1)*3-2:...
    elem_mp(i_K,1)*3)...
    =...
    K(elem_mp(i_K,1)*3-2:elem_mp(i_K,1)*3,elem_mp(i_K,1)*3-2:...
    elem_mp(i_K,1)*3)...
    +global_K(1:3,1:3);

K(elem_mp(i_K,2)*3-2:elem_mp(i_K,2)*3,elem_mp(i_K,1)*3-2:...
    elem_mp(i_K,1)*3)=...
    K(elem_mp(i_K,2)*3-2:elem_mp(i_K,2)*3,elem_mp(i_K,1)*3-2:...
    elem_mp(i_K,1)*3)...
    +global_K(4:6,1:3);

K(elem_mp(i_K,1)*3-2:elem_mp(i_K,1)*3,elem_mp(i_K,2)*3-2:...
    elem_mp(i_K,2)*3)=...
    K(elem_mp(i_K,1)*3-2:elem_mp(i_K,1)*3,elem_mp(i_K,2)*3-2:...
    elem_mp(i_K,2)*3)...
    +global_K(1:3,4:6);

K(elem_mp(i_K,2)*3-2:elem_mp(i_K,2)*3,elem_mp(i_K,2)*3-2:...
    elem_mp(i_K,2)*3)=...
    K(elem_mp(i_K,2)*3-2:elem_mp(i_K,2)*3,elem_mp(i_K,2)*3-2:...
    elem_mp(i_K,2)*3)...
    +global_K(4:6,4:6);

end

%%-------------------------------------------------------------------------
